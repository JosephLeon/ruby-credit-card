#!/usr/bin/env ruby

require 'optparse'
require 'creditcard'
require 'creditcard/purchase'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: ruby -Ilib ./bin/creditcard [options]"

  opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
    options[:verbose] = v
  end

  opts.on("-r", "--require LIBRARY",
	          "Require the LIBRARY before executing your script") do |lib|
	  puts "You required #{lib}!"
	  options[:required_lib] = lib
	end

	# Validates card number
	opts.on("-V", "--validate CARD_NUM", 
					"Validate the credit card number") do |num|

		if num.size === 15
			if num.start_with?("34") || num.start_with?("37")
				card_type = "amex"
			else
				puts "Not a valid card number"
			end
		elsif num.size === 13
			if num.start_with?("4")
				card_type = "visa"
			else
				puts "Not a valid card number"
			end
		elsif num.size === 16
			if num.start_with?("6011") 
				card_type = "discover"
			elsif num.start_with?("51") || num.start_with?("55")
				card_type = "mastercard"
			elsif num.start_with?("4")
				card_type = "visa"
			else
				puts "Not a valid card number"
			end
		else
			puts "Not a valid card number"
		end
		# OPTIMIZE include start with in other size checks
				
			
		options[:card_number] = num
		options[:card_type] = card_type
	end

end.parse!

p options
p ARGV

# puts "What is the type of credit card?\n
# Enter 1 for Visa\n
# Enter 2 for MasterCard\n
# Enter 3 for Discover\n
# Enter 4 for American Express\n
# Enter q to quit"
# card_type = gets.chomp

# def get_credit_card_type(type)
# 	while type != 'q'
# 		case type
# 		when '1'
# 			break chosen_type = "visa"
# 		when '2'
# 			break chosen_type = "mastercard"
# 		when '3'
# 			break chosen_type = "discover"
# 		when '4'
# 			break chosen_type = "american Express"		
# 		end
# 	end
# end

# credit_type = get_credit_card_type(card_type)
# puts credit_type






# puts "Proceed with card type {#{chosen_type}"

# puts Purchase.new.test_method